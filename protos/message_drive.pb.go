//*
// Messages to manage the drives.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: message_drive.proto

package xiraid_exporter

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Delete the metadata and reset the error counter from the drives.
type DriveClean struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// The list of block devices to delete metadata and reset the fault counter.
	Drives        []string `protobuf:"bytes,1,rep,name=drives,proto3" json:"drives,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DriveClean) Reset() {
	*x = DriveClean{}
	mi := &file_message_drive_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriveClean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriveClean) ProtoMessage() {}

func (x *DriveClean) ProtoReflect() protoreflect.Message {
	mi := &file_message_drive_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriveClean.ProtoReflect.Descriptor instead.
func (*DriveClean) Descriptor() ([]byte, []int) {
	return file_message_drive_proto_rawDescGZIP(), []int{0}
}

func (x *DriveClean) GetDrives() []string {
	if x != nil {
		return x.Drives
	}
	return nil
}

// *
// Reset the current numbers of faults for drives.
type DriveFaultyCountReset struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// The list of block devices to reset their current numbers of faults (default for all drives).
	Drives        []string `protobuf:"bytes,1,rep,name=drives,proto3" json:"drives,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DriveFaultyCountReset) Reset() {
	*x = DriveFaultyCountReset{}
	mi := &file_message_drive_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriveFaultyCountReset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriveFaultyCountReset) ProtoMessage() {}

func (x *DriveFaultyCountReset) ProtoReflect() protoreflect.Message {
	mi := &file_message_drive_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriveFaultyCountReset.ProtoReflect.Descriptor instead.
func (*DriveFaultyCountReset) Descriptor() ([]byte, []int) {
	return file_message_drive_proto_rawDescGZIP(), []int{1}
}

func (x *DriveFaultyCountReset) GetDrives() []string {
	if x != nil {
		return x.Drives
	}
	return nil
}

// *
// Show the current numbers of faults for drives.
type DriveFaultyCountShow struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// The list of block devices to show their current numbers of faults (default for all drives).
	Drives []string `protobuf:"bytes,1,rep,name=drives,proto3" json:"drives,omitempty"`
	// *
	// The RAID name for which drives the current number of faults will be shown.
	Name          *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DriveFaultyCountShow) Reset() {
	*x = DriveFaultyCountShow{}
	mi := &file_message_drive_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriveFaultyCountShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriveFaultyCountShow) ProtoMessage() {}

func (x *DriveFaultyCountShow) ProtoReflect() protoreflect.Message {
	mi := &file_message_drive_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriveFaultyCountShow.ProtoReflect.Descriptor instead.
func (*DriveFaultyCountShow) Descriptor() ([]byte, []int) {
	return file_message_drive_proto_rawDescGZIP(), []int{2}
}

func (x *DriveFaultyCountShow) GetDrives() []string {
	if x != nil {
		return x.Drives
	}
	return nil
}

func (x *DriveFaultyCountShow) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// *
// Manage the drive LED indication.
type DriveLocate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// The list of block devices to switch the indication on
	// or switch the indication off (the null value).
	Drives        []string `protobuf:"bytes,1,rep,name=drives,proto3" json:"drives,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DriveLocate) Reset() {
	*x = DriveLocate{}
	mi := &file_message_drive_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriveLocate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriveLocate) ProtoMessage() {}

func (x *DriveLocate) ProtoReflect() protoreflect.Message {
	mi := &file_message_drive_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriveLocate.ProtoReflect.Descriptor instead.
func (*DriveLocate) Descriptor() ([]byte, []int) {
	return file_message_drive_proto_rawDescGZIP(), []int{3}
}

func (x *DriveLocate) GetDrives() []string {
	if x != nil {
		return x.Drives
	}
	return nil
}

var File_message_drive_proto protoreflect.FileDescriptor

var file_message_drive_proto_rawDesc = string([]byte{
	0x0a, 0x13, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x78, 0x72, 0x61, 0x69, 0x64, 0x2e, 0x76, 0x32, 0x22,
	0x24, 0x0a, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x73, 0x22, 0x2f, 0x0a, 0x15, 0x44, 0x72, 0x69, 0x76, 0x65, 0x46, 0x61,
	0x75, 0x6c, 0x74, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x22, 0x50, 0x0a, 0x14, 0x44, 0x72, 0x69, 0x76, 0x65, 0x46,
	0x61, 0x75, 0x6c, 0x74, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x0b, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x42,
	0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x74,
	0x68, 0x69, 0x6c, 0x62, 0x6f, 0x72, 0x2f, 0x78, 0x69, 0x72, 0x61, 0x69, 0x64, 0x5f, 0x65, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_message_drive_proto_rawDescOnce sync.Once
	file_message_drive_proto_rawDescData []byte
)

func file_message_drive_proto_rawDescGZIP() []byte {
	file_message_drive_proto_rawDescOnce.Do(func() {
		file_message_drive_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_drive_proto_rawDesc), len(file_message_drive_proto_rawDesc)))
	})
	return file_message_drive_proto_rawDescData
}

var file_message_drive_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_message_drive_proto_goTypes = []any{
	(*DriveClean)(nil),            // 0: xraid.v2.DriveClean
	(*DriveFaultyCountReset)(nil), // 1: xraid.v2.DriveFaultyCountReset
	(*DriveFaultyCountShow)(nil),  // 2: xraid.v2.DriveFaultyCountShow
	(*DriveLocate)(nil),           // 3: xraid.v2.DriveLocate
}
var file_message_drive_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_message_drive_proto_init() }
func file_message_drive_proto_init() {
	if File_message_drive_proto != nil {
		return
	}
	file_message_drive_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_drive_proto_rawDesc), len(file_message_drive_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_drive_proto_goTypes,
		DependencyIndexes: file_message_drive_proto_depIdxs,
		MessageInfos:      file_message_drive_proto_msgTypes,
	}.Build()
	File_message_drive_proto = out.File
	file_message_drive_proto_goTypes = nil
	file_message_drive_proto_depIdxs = nil
}
