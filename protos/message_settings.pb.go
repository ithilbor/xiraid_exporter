//*
// Messages to manage the additional settings of the program.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: message_settings.proto

package xiraid_exporter

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Modify connection settings.
type SettingsAuthModify struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// The host name or IP address for the connection.
	Host *string `protobuf:"bytes,1,opt,name=host,proto3,oneof" json:"host,omitempty"`
	// *
	// The port for the connection.
	Port          *uint32 `protobuf:"varint,2,opt,name=port,proto3,oneof" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingsAuthModify) Reset() {
	*x = SettingsAuthModify{}
	mi := &file_message_settings_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsAuthModify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsAuthModify) ProtoMessage() {}

func (x *SettingsAuthModify) ProtoReflect() protoreflect.Message {
	mi := &file_message_settings_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsAuthModify.ProtoReflect.Descriptor instead.
func (*SettingsAuthModify) Descriptor() ([]byte, []int) {
	return file_message_settings_proto_rawDescGZIP(), []int{0}
}

func (x *SettingsAuthModify) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *SettingsAuthModify) GetPort() uint32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

// *
// Show connection settings.
type SettingsAuthShow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingsAuthShow) Reset() {
	*x = SettingsAuthShow{}
	mi := &file_message_settings_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsAuthShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsAuthShow) ProtoMessage() {}

func (x *SettingsAuthShow) ProtoReflect() protoreflect.Message {
	mi := &file_message_settings_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsAuthShow.ProtoReflect.Descriptor instead.
func (*SettingsAuthShow) Descriptor() ([]byte, []int) {
	return file_message_settings_proto_rawDescGZIP(), []int{1}
}

// *
// Manage the threshold value of I/O errors for all drives.
type SettingsFaultyCountModify struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// The threshold value for all drives.
	Threshold     *uint32 `protobuf:"varint,1,opt,name=threshold,proto3,oneof" json:"threshold,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingsFaultyCountModify) Reset() {
	*x = SettingsFaultyCountModify{}
	mi := &file_message_settings_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsFaultyCountModify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsFaultyCountModify) ProtoMessage() {}

func (x *SettingsFaultyCountModify) ProtoReflect() protoreflect.Message {
	mi := &file_message_settings_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsFaultyCountModify.ProtoReflect.Descriptor instead.
func (*SettingsFaultyCountModify) Descriptor() ([]byte, []int) {
	return file_message_settings_proto_rawDescGZIP(), []int{2}
}

func (x *SettingsFaultyCountModify) GetThreshold() uint32 {
	if x != nil && x.Threshold != nil {
		return *x.Threshold
	}
	return 0
}

// *
// Show the threshold value of I/O errors for all drives.
type SettingsFaultyCountShow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingsFaultyCountShow) Reset() {
	*x = SettingsFaultyCountShow{}
	mi := &file_message_settings_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsFaultyCountShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsFaultyCountShow) ProtoMessage() {}

func (x *SettingsFaultyCountShow) ProtoReflect() protoreflect.Message {
	mi := &file_message_settings_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsFaultyCountShow.ProtoReflect.Descriptor instead.
func (*SettingsFaultyCountShow) Descriptor() ([]byte, []int) {
	return file_message_settings_proto_rawDescGZIP(), []int{3}
}

// *
// Manage logging settings.
type SettingsLogModify struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// Logging level.
	Level         *string `protobuf:"bytes,1,opt,name=level,proto3,oneof" json:"level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingsLogModify) Reset() {
	*x = SettingsLogModify{}
	mi := &file_message_settings_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsLogModify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsLogModify) ProtoMessage() {}

func (x *SettingsLogModify) ProtoReflect() protoreflect.Message {
	mi := &file_message_settings_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsLogModify.ProtoReflect.Descriptor instead.
func (*SettingsLogModify) Descriptor() ([]byte, []int) {
	return file_message_settings_proto_rawDescGZIP(), []int{4}
}

func (x *SettingsLogModify) GetLevel() string {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return ""
}

// *
// Show logging settings.
type SettingsLogShow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingsLogShow) Reset() {
	*x = SettingsLogShow{}
	mi := &file_message_settings_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsLogShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsLogShow) ProtoMessage() {}

func (x *SettingsLogShow) ProtoReflect() protoreflect.Message {
	mi := &file_message_settings_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsLogShow.ProtoReflect.Descriptor instead.
func (*SettingsLogShow) Descriptor() ([]byte, []int) {
	return file_message_settings_proto_rawDescGZIP(), []int{5}
}

// *
// Manage email notification settings.
type SettingsMailModify struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// The polling interval for RAIDs and the drives in seconds.
	PollingInterval *uint32 `protobuf:"varint,1,opt,name=polling_interval,json=pollingInterval,proto3,oneof" json:"polling_interval,omitempty"`
	// *
	// Polling interval for the progress of initialization
	// and reconstruction, in minutes.
	ProgressPollingInterval *uint32 `protobuf:"varint,2,opt,name=progress_polling_interval,json=progressPollingInterval,proto3,oneof" json:"progress_polling_interval,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SettingsMailModify) Reset() {
	*x = SettingsMailModify{}
	mi := &file_message_settings_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsMailModify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsMailModify) ProtoMessage() {}

func (x *SettingsMailModify) ProtoReflect() protoreflect.Message {
	mi := &file_message_settings_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsMailModify.ProtoReflect.Descriptor instead.
func (*SettingsMailModify) Descriptor() ([]byte, []int) {
	return file_message_settings_proto_rawDescGZIP(), []int{6}
}

func (x *SettingsMailModify) GetPollingInterval() uint32 {
	if x != nil && x.PollingInterval != nil {
		return *x.PollingInterval
	}
	return 0
}

func (x *SettingsMailModify) GetProgressPollingInterval() uint32 {
	if x != nil && x.ProgressPollingInterval != nil {
		return *x.ProgressPollingInterval
	}
	return 0
}

// *
// Show email notification settings.
type SettingsMailShow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingsMailShow) Reset() {
	*x = SettingsMailShow{}
	mi := &file_message_settings_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsMailShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsMailShow) ProtoMessage() {}

func (x *SettingsMailShow) ProtoReflect() protoreflect.Message {
	mi := &file_message_settings_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsMailShow.ProtoReflect.Descriptor instead.
func (*SettingsMailShow) Descriptor() ([]byte, []int) {
	return file_message_settings_proto_rawDescGZIP(), []int{7}
}

// *
// Manage the spare pool settings.
type SettingsPoolModify struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// Delay time (in seconds) for the drive replacement from the spare pools.
	ReplaceDelay  *uint32 `protobuf:"varint,1,opt,name=replace_delay,json=replaceDelay,proto3,oneof" json:"replace_delay,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingsPoolModify) Reset() {
	*x = SettingsPoolModify{}
	mi := &file_message_settings_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsPoolModify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsPoolModify) ProtoMessage() {}

func (x *SettingsPoolModify) ProtoReflect() protoreflect.Message {
	mi := &file_message_settings_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsPoolModify.ProtoReflect.Descriptor instead.
func (*SettingsPoolModify) Descriptor() ([]byte, []int) {
	return file_message_settings_proto_rawDescGZIP(), []int{8}
}

func (x *SettingsPoolModify) GetReplaceDelay() uint32 {
	if x != nil && x.ReplaceDelay != nil {
		return *x.ReplaceDelay
	}
	return 0
}

// *
// Show the spare pool settings.
type SettingsPoolShow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingsPoolShow) Reset() {
	*x = SettingsPoolShow{}
	mi := &file_message_settings_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsPoolShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsPoolShow) ProtoMessage() {}

func (x *SettingsPoolShow) ProtoReflect() protoreflect.Message {
	mi := &file_message_settings_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsPoolShow.ProtoReflect.Descriptor instead.
func (*SettingsPoolShow) Descriptor() ([]byte, []int) {
	return file_message_settings_proto_rawDescGZIP(), []int{9}
}

// *
// Manage RAID monitoring.
type SettingsScannerModify struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// S.M.A.R.T. drive health polling interval, in seconds.
	SmartPollingInterval *uint32 `protobuf:"varint,2,opt,name=smart_polling_interval,json=smartPollingInterval,proto3,oneof" json:"smart_polling_interval,omitempty"`
	// *
	// Enable (1) or disable (0) the automatic LED indication
	// of drives in the system.
	LedEnabled *uint32 `protobuf:"varint,3,opt,name=led_enabled,json=ledEnabled,proto3,oneof" json:"led_enabled,omitempty"`
	// *
	// The polling interval for RAIDs and drives in seconds.
	ScannerPollingInterval *uint32 `protobuf:"varint,4,opt,name=scanner_polling_interval,json=scannerPollingInterval,proto3,oneof" json:"scanner_polling_interval,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SettingsScannerModify) Reset() {
	*x = SettingsScannerModify{}
	mi := &file_message_settings_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsScannerModify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsScannerModify) ProtoMessage() {}

func (x *SettingsScannerModify) ProtoReflect() protoreflect.Message {
	mi := &file_message_settings_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsScannerModify.ProtoReflect.Descriptor instead.
func (*SettingsScannerModify) Descriptor() ([]byte, []int) {
	return file_message_settings_proto_rawDescGZIP(), []int{10}
}

func (x *SettingsScannerModify) GetSmartPollingInterval() uint32 {
	if x != nil && x.SmartPollingInterval != nil {
		return *x.SmartPollingInterval
	}
	return 0
}

func (x *SettingsScannerModify) GetLedEnabled() uint32 {
	if x != nil && x.LedEnabled != nil {
		return *x.LedEnabled
	}
	return 0
}

func (x *SettingsScannerModify) GetScannerPollingInterval() uint32 {
	if x != nil && x.ScannerPollingInterval != nil {
		return *x.ScannerPollingInterval
	}
	return 0
}

// *
// Show RAID monitoring parameters.
type SettingsScannerShow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingsScannerShow) Reset() {
	*x = SettingsScannerShow{}
	mi := &file_message_settings_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsScannerShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsScannerShow) ProtoMessage() {}

func (x *SettingsScannerShow) ProtoReflect() protoreflect.Message {
	mi := &file_message_settings_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsScannerShow.ProtoReflect.Descriptor instead.
func (*SettingsScannerShow) Descriptor() ([]byte, []int) {
	return file_message_settings_proto_rawDescGZIP(), []int{11}
}

// *
// Manage cluster settings.
type SettingsClusterModify struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// Enable (1) or disable (0) automatic RAIDs start.
	RaidAutostart *uint32 `protobuf:"varint,1,opt,name=raid_autostart,json=raidAutostart,proto3,oneof" json:"raid_autostart,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingsClusterModify) Reset() {
	*x = SettingsClusterModify{}
	mi := &file_message_settings_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsClusterModify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsClusterModify) ProtoMessage() {}

func (x *SettingsClusterModify) ProtoReflect() protoreflect.Message {
	mi := &file_message_settings_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsClusterModify.ProtoReflect.Descriptor instead.
func (*SettingsClusterModify) Descriptor() ([]byte, []int) {
	return file_message_settings_proto_rawDescGZIP(), []int{12}
}

func (x *SettingsClusterModify) GetRaidAutostart() uint32 {
	if x != nil && x.RaidAutostart != nil {
		return *x.RaidAutostart
	}
	return 0
}

// *
// Show cluster settings.
type SettingsClusterShow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingsClusterShow) Reset() {
	*x = SettingsClusterShow{}
	mi := &file_message_settings_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsClusterShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsClusterShow) ProtoMessage() {}

func (x *SettingsClusterShow) ProtoReflect() protoreflect.Message {
	mi := &file_message_settings_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsClusterShow.ProtoReflect.Descriptor instead.
func (*SettingsClusterShow) Descriptor() ([]byte, []int) {
	return file_message_settings_proto_rawDescGZIP(), []int{13}
}

var File_message_settings_proto protoreflect.FileDescriptor

var file_message_settings_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x78, 0x72, 0x61, 0x69, 0x64, 0x2e,
	0x76, 0x32, 0x22, 0x58, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x41, 0x75,
	0x74, 0x68, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x01, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68,
	0x6f, 0x73, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x12, 0x0a, 0x10,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x41, 0x75, 0x74, 0x68, 0x53, 0x68, 0x6f, 0x77,
	0x22, 0x4c, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x46, 0x61, 0x75, 0x6c,
	0x74, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x21, 0x0a,
	0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x00, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x19,
	0x0a, 0x17, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x79,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x22, 0x38, 0x0a, 0x11, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x4c, 0x6f, 0x67, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x19,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4c,
	0x6f, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x22, 0xb8, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x2e, 0x0a,
	0x10, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x6f, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a,
	0x19, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x01, 0x52, 0x17, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x13,
	0x0a, 0x11, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x61, 0x69,
	0x6c, 0x53, 0x68, 0x6f, 0x77, 0x22, 0x50, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x50, 0x6f, 0x6f, 0x6c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x28, 0x0a, 0x0d, 0x72,
	0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x44, 0x65, 0x6c,
	0x61, 0x79, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x22, 0x97, 0x02, 0x0a, 0x15,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x39, 0x0a, 0x16, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x70,
	0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x14, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x6f,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x24, 0x0a, 0x0b, 0x6c, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x0a, 0x6c, 0x65, 0x64, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x18, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x16, 0x73, 0x63, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x5f,
	0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6c, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4a, 0x04, 0x08,
	0x01, 0x10, 0x02, 0x52, 0x10, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x22, 0x56, 0x0a, 0x15,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x2a, 0x0a, 0x0e, 0x72, 0x61, 0x69, 0x64, 0x5f, 0x61, 0x75,
	0x74, 0x6f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x0d, 0x72, 0x61, 0x69, 0x64, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x61, 0x69, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x42, 0x25, 0x5a, 0x23, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x74, 0x68, 0x69, 0x6c, 0x62,
	0x6f, 0x72, 0x2f, 0x78, 0x69, 0x72, 0x61, 0x69, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_message_settings_proto_rawDescOnce sync.Once
	file_message_settings_proto_rawDescData []byte
)

func file_message_settings_proto_rawDescGZIP() []byte {
	file_message_settings_proto_rawDescOnce.Do(func() {
		file_message_settings_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_settings_proto_rawDesc), len(file_message_settings_proto_rawDesc)))
	})
	return file_message_settings_proto_rawDescData
}

var file_message_settings_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_message_settings_proto_goTypes = []any{
	(*SettingsAuthModify)(nil),        // 0: xraid.v2.SettingsAuthModify
	(*SettingsAuthShow)(nil),          // 1: xraid.v2.SettingsAuthShow
	(*SettingsFaultyCountModify)(nil), // 2: xraid.v2.SettingsFaultyCountModify
	(*SettingsFaultyCountShow)(nil),   // 3: xraid.v2.SettingsFaultyCountShow
	(*SettingsLogModify)(nil),         // 4: xraid.v2.SettingsLogModify
	(*SettingsLogShow)(nil),           // 5: xraid.v2.SettingsLogShow
	(*SettingsMailModify)(nil),        // 6: xraid.v2.SettingsMailModify
	(*SettingsMailShow)(nil),          // 7: xraid.v2.SettingsMailShow
	(*SettingsPoolModify)(nil),        // 8: xraid.v2.SettingsPoolModify
	(*SettingsPoolShow)(nil),          // 9: xraid.v2.SettingsPoolShow
	(*SettingsScannerModify)(nil),     // 10: xraid.v2.SettingsScannerModify
	(*SettingsScannerShow)(nil),       // 11: xraid.v2.SettingsScannerShow
	(*SettingsClusterModify)(nil),     // 12: xraid.v2.SettingsClusterModify
	(*SettingsClusterShow)(nil),       // 13: xraid.v2.SettingsClusterShow
}
var file_message_settings_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_message_settings_proto_init() }
func file_message_settings_proto_init() {
	if File_message_settings_proto != nil {
		return
	}
	file_message_settings_proto_msgTypes[0].OneofWrappers = []any{}
	file_message_settings_proto_msgTypes[2].OneofWrappers = []any{}
	file_message_settings_proto_msgTypes[4].OneofWrappers = []any{}
	file_message_settings_proto_msgTypes[6].OneofWrappers = []any{}
	file_message_settings_proto_msgTypes[8].OneofWrappers = []any{}
	file_message_settings_proto_msgTypes[10].OneofWrappers = []any{}
	file_message_settings_proto_msgTypes[12].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_settings_proto_rawDesc), len(file_message_settings_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_settings_proto_goTypes,
		DependencyIndexes: file_message_settings_proto_depIdxs,
		MessageInfos:      file_message_settings_proto_msgTypes,
	}.Build()
	File_message_settings_proto = out.File
	file_message_settings_proto_goTypes = nil
	file_message_settings_proto_depIdxs = nil
}
