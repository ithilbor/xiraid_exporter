//*
// Messages to manage the license.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: message_license.proto

package xiraid_exporter

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Delete the current license.
type LicenseDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LicenseDelete) Reset() {
	*x = LicenseDelete{}
	mi := &file_message_license_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LicenseDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseDelete) ProtoMessage() {}

func (x *LicenseDelete) ProtoReflect() protoreflect.Message {
	mi := &file_message_license_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseDelete.ProtoReflect.Descriptor instead.
func (*LicenseDelete) Descriptor() ([]byte, []int) {
	return file_message_license_proto_rawDescGZIP(), []int{0}
}

// *
// Show info on the current license.
type LicenseShow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LicenseShow) Reset() {
	*x = LicenseShow{}
	mi := &file_message_license_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LicenseShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseShow) ProtoMessage() {}

func (x *LicenseShow) ProtoReflect() protoreflect.Message {
	mi := &file_message_license_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseShow.ProtoReflect.Descriptor instead.
func (*LicenseShow) Descriptor() ([]byte, []int) {
	return file_message_license_proto_rawDescGZIP(), []int{1}
}

// *
// Update the current license.
type LicenseUpdate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// The path to the new license file.
	Path          string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LicenseUpdate) Reset() {
	*x = LicenseUpdate{}
	mi := &file_message_license_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LicenseUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseUpdate) ProtoMessage() {}

func (x *LicenseUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_message_license_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseUpdate.ProtoReflect.Descriptor instead.
func (*LicenseUpdate) Descriptor() ([]byte, []int) {
	return file_message_license_proto_rawDescGZIP(), []int{2}
}

func (x *LicenseUpdate) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

var File_message_license_proto protoreflect.FileDescriptor

var file_message_license_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x78, 0x72, 0x61, 0x69, 0x64, 0x2e, 0x76,
	0x32, 0x22, 0x0f, 0x0a, 0x0d, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x68, 0x6f,
	0x77, 0x22, 0x23, 0x0a, 0x0d, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x74, 0x68, 0x69, 0x6c, 0x62, 0x6f, 0x72, 0x2f, 0x78, 0x69,
	0x72, 0x61, 0x69, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_message_license_proto_rawDescOnce sync.Once
	file_message_license_proto_rawDescData []byte
)

func file_message_license_proto_rawDescGZIP() []byte {
	file_message_license_proto_rawDescOnce.Do(func() {
		file_message_license_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_license_proto_rawDesc), len(file_message_license_proto_rawDesc)))
	})
	return file_message_license_proto_rawDescData
}

var file_message_license_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_message_license_proto_goTypes = []any{
	(*LicenseDelete)(nil), // 0: xraid.v2.LicenseDelete
	(*LicenseShow)(nil),   // 1: xraid.v2.LicenseShow
	(*LicenseUpdate)(nil), // 2: xraid.v2.LicenseUpdate
}
var file_message_license_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_message_license_proto_init() }
func file_message_license_proto_init() {
	if File_message_license_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_license_proto_rawDesc), len(file_message_license_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_license_proto_goTypes,
		DependencyIndexes: file_message_license_proto_depIdxs,
		MessageInfos:      file_message_license_proto_msgTypes,
	}.Build()
	File_message_license_proto = out.File
	file_message_license_proto_goTypes = nil
	file_message_license_proto_depIdxs = nil
}
