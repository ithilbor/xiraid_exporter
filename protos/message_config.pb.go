//*
// Messages to manage the configuration file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: message_config.proto

package xiraid_exporter

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Apply the configuration file for all restoring RAIDs.
type ConfigApply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigApply) Reset() {
	*x = ConfigApply{}
	mi := &file_message_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigApply) ProtoMessage() {}

func (x *ConfigApply) ProtoReflect() protoreflect.Message {
	mi := &file_message_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigApply.ProtoReflect.Descriptor instead.
func (*ConfigApply) Descriptor() ([]byte, []int) {
	return file_message_config_proto_rawDescGZIP(), []int{0}
}

// *
// Save the current configuration file
// (create the backup file backup_raid.conf at the current directory).
type ConfigBackup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigBackup) Reset() {
	*x = ConfigBackup{}
	mi := &file_message_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigBackup) ProtoMessage() {}

func (x *ConfigBackup) ProtoReflect() protoreflect.Message {
	mi := &file_message_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigBackup.ProtoReflect.Descriptor instead.
func (*ConfigBackup) Descriptor() ([]byte, []int) {
	return file_message_config_proto_rawDescGZIP(), []int{1}
}

// *
// Restore the configuration file from a file or from the drives.
type ConfigRestore struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// The list of block devices to restore the configuration file to /etc/{program_name}/raid.conf.drive
	// (default from all drives).
	Drives []string `protobuf:"bytes,2,rep,name=drives,proto3" json:"drives,omitempty"`
	// *
	// A file to restore the common configuration file (default /etc/{program_name}/raid.conf.bak).
	CommonFile *string `protobuf:"bytes,3,opt,name=common_file,json=commonFile,proto3,oneof" json:"common_file,omitempty"`
	// *
	// A file to restore the RAID configuration file (raids/{program_name}/raid_name.conf.bak).
	RaidFile      *string `protobuf:"bytes,4,opt,name=raid_file,json=raidFile,proto3,oneof" json:"raid_file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigRestore) Reset() {
	*x = ConfigRestore{}
	mi := &file_message_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigRestore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRestore) ProtoMessage() {}

func (x *ConfigRestore) ProtoReflect() protoreflect.Message {
	mi := &file_message_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRestore.ProtoReflect.Descriptor instead.
func (*ConfigRestore) Descriptor() ([]byte, []int) {
	return file_message_config_proto_rawDescGZIP(), []int{2}
}

func (x *ConfigRestore) GetDrives() []string {
	if x != nil {
		return x.Drives
	}
	return nil
}

func (x *ConfigRestore) GetCommonFile() string {
	if x != nil && x.CommonFile != nil {
		return *x.CommonFile
	}
	return ""
}

func (x *ConfigRestore) GetRaidFile() string {
	if x != nil && x.RaidFile != nil {
		return *x.RaidFile
	}
	return ""
}

// *
// Show configuration files stored on the drives.
type ConfigShow struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// The list of block devices to show configuration files (default from all drives).
	Drives        []string `protobuf:"bytes,1,rep,name=drives,proto3" json:"drives,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigShow) Reset() {
	*x = ConfigShow{}
	mi := &file_message_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigShow) ProtoMessage() {}

func (x *ConfigShow) ProtoReflect() protoreflect.Message {
	mi := &file_message_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigShow.ProtoReflect.Descriptor instead.
func (*ConfigShow) Descriptor() ([]byte, []int) {
	return file_message_config_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigShow) GetDrives() []string {
	if x != nil {
		return x.Drives
	}
	return nil
}

var File_message_config_proto protoreflect.FileDescriptor

var file_message_config_proto_rawDesc = string([]byte{
	0x0a, 0x14, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x78, 0x72, 0x61, 0x69, 0x64, 0x2e, 0x76, 0x32,
	0x22, 0x0d, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x22,
	0x0e, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x22,
	0x99, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x09, 0x72, 0x61, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x72, 0x61, 0x69, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x61, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x4a,
	0x04, 0x08, 0x01, 0x10, 0x02, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x24, 0x0a, 0x0a, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x73, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x69, 0x74, 0x68, 0x69, 0x6c, 0x62, 0x6f, 0x72, 0x2f, 0x78, 0x69, 0x72, 0x61, 0x69, 0x64, 0x5f,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_message_config_proto_rawDescOnce sync.Once
	file_message_config_proto_rawDescData []byte
)

func file_message_config_proto_rawDescGZIP() []byte {
	file_message_config_proto_rawDescOnce.Do(func() {
		file_message_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_config_proto_rawDesc), len(file_message_config_proto_rawDesc)))
	})
	return file_message_config_proto_rawDescData
}

var file_message_config_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_message_config_proto_goTypes = []any{
	(*ConfigApply)(nil),   // 0: xraid.v2.ConfigApply
	(*ConfigBackup)(nil),  // 1: xraid.v2.ConfigBackup
	(*ConfigRestore)(nil), // 2: xraid.v2.ConfigRestore
	(*ConfigShow)(nil),    // 3: xraid.v2.ConfigShow
}
var file_message_config_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_message_config_proto_init() }
func file_message_config_proto_init() {
	if File_message_config_proto != nil {
		return
	}
	file_message_config_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_config_proto_rawDesc), len(file_message_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_config_proto_goTypes,
		DependencyIndexes: file_message_config_proto_depIdxs,
		MessageInfos:      file_message_config_proto_msgTypes,
	}.Build()
	File_message_config_proto = out.File
	file_message_config_proto_goTypes = nil
	file_message_config_proto_depIdxs = nil
}
